<?xml version="1.0" encoding="UTF-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Blog Name</title>
  <subtitle>Blog subtitle</subtitle>
  <id>http://blog.url.com/</id>
  <link href="http://blog.url.com/"/>
  <link href="http://blog.url.com/feed.xml" rel="self"/>
  <updated>2016-03-28T09:00:00+09:00</updated>
  <author>
    <name>Blog Author</name>
  </author>
  <entry>
    <title>Dockerコンテナのリポジトリ管理　DockerHubへログイン、イメージの取得〜更新、コミットまで。</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/28/how-to-use-docker-from-login-to-commit.html"/>
    <id>http://blog.url.com/2016/03/28/how-to-use-docker-from-login-to-commit.html</id>
    <published>2016-03-28T09:00:00+09:00</published>
    <updated>2016-03-28T13:41:25+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;p&gt;今回はDockerHubでのプライベートリポジトリ管理（手動）を想定しました。&lt;br&gt;
まずはDockerHubへログインした上でリポジトリからコンテナをpullで取得し、その後コンテナ自身を更新します。その後commit→pushでDockerHubにあるリポジトリを更新します。&lt;br&gt;
以上が「コンテナか管理」の際に行う基本的な流れになると思います。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="1.dockerhubへのログイン"&gt;1.DockerHubへのログイン&lt;/h1&gt;

&lt;p&gt;まずはリポジトリへアクセスできるようにするため、DockerHubへログインを行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker login
Username: kohei
Password:
Email: kohei@hogehoge.jp
WARNING: login credentials saved in /Users/kohei/.docker/config.json
Login Succeeded
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="2.コンテナのpull"&gt;2.コンテナのpull&lt;/h1&gt;

&lt;p&gt;ローカルリポジトリに存在するdocker imageを確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;現在はローカルリポジトリにはimageが存在しないため何もリストされていません。&lt;br&gt;
確認ができたら&lt;code&gt;$ docker pull リポジトリ:タグ&lt;/code&gt;でDockerHubからimageを取得します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker pull kohei/httpd:ver1.0
ver1.0: Pulling from kohei/httpd
a2c33fe967de: Pull complete
d3bf674be7aa: Pull complete
13bab7291cec: Pull complete
e87afdecef01: Pull complete
4cf71c080937: Pull complete
Digest: sha256:5b940d5b742317185db6b1d25b06e6e68060b08f8fdd53f36a6bd6d471bd7043
Status: Downloaded newer image for kohei/httpd:ver1.0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;再度&lt;code&gt;$ docker images&lt;/code&gt;を実行すると、先ほどpullしたimageが取得できているのが確認できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
kohei/httpd         ver1.0              4cf71c080937        2 days ago          264.3 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="3.コンテナの更新"&gt;3.コンテナの更新&lt;/h1&gt;

&lt;p&gt;imageが取得できたのでコンテナを更新します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker run -it kohei/httpd:ver1.0 /bin/bash
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;コンテナを起動してパッケージのインストールやconfの修正などを行います。&lt;br&gt;
修正が完了したらexitでコンテナから抜けて停止させます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="4.イメージの作成"&gt;4.イメージの作成&lt;/h1&gt;

&lt;p&gt;修正したコンテナの&lt;code&gt;CONTAIER ID&lt;/code&gt;を確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker ps -a
CONTAINER ID        IMAGE                COMMAND             CREATED             STATUS                      PORTS               NAMES
b10edb89cd05        kohei/httpd:ver1.0   "/bin/bash"         43 seconds ago      Exited (0) 12 seconds ago                       gloomy_khorana
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;確認したら、&lt;code&gt;$ docker commit -m &amp;quot;コメント&amp;quot; &amp;lt;コンテナID&amp;gt; &amp;lt;リポジトリ:タグ&amp;gt;&lt;/code&gt;でローカルリポジトリへコミットします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker commit -m "edited container" b10edb89cd05 kohei/httpd:ver1.0
02607c25ed22c085a8e4964c91406baa911f194265db5d4ddfd44a2f96e799ec
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;完了したら再度&lt;code&gt;$ docker images&lt;/code&gt;で&lt;code&gt;IMAGE ID&lt;/code&gt;を確認します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker images
REPOSITORY          TAG                 IMAGE ID            CREATED             VIRTUAL SIZE
kohei/httpd         ver1.0              02607c25ed22        5 seconds ago       264.3 MB
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;すぐに確認すれば&lt;code&gt;CREATED&lt;/code&gt;が数秒前という記載になっています。また、コミットする前に確認した&lt;code&gt;IMAGE ID&lt;/code&gt;は異なるIDになっています。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="5.コンテナのpush"&gt;5.コンテナのpush&lt;/h1&gt;

&lt;p&gt;ローカルリポジトリへコミットが完了したらDockerHubへpushします。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ docker push kohei/httpd:ver1.0
The push refers to a repository [docker.io/kohei/httpd] (len: 1)
02607c25ed22: Pushed
4cf71c080937: Image already exists
e87afdecef01: Image already exists
13bab7291cec: Image already exists
d3bf674be7aa: Image already exists
ver1.0: digest: sha256:fb10c3626b1fc732c314efc132a29f7ee37c52176547a076c72553a97eaee949 size: 9116
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上で完了です。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="おわりに"&gt;おわりに&lt;/h1&gt;

&lt;p&gt;コンテナ中身の更新方法はいろいろあるのでとりあえずrunで起動しての修正にしてます。&lt;br&gt;
ただ、この一連の流れ(login〜pull〜commit〜push)はコンテナを管理する立場の人にはルーティン作業になると思ったのでメモとしてまとめました。&lt;br&gt;
loginは一度ログインしてしまえば不要ですが、複数アカウントをまたぐ可能性がある場合はポイントになると思います。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>aws-cliのバージョンをアップグレードする。for MacOS</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/24/to-update-aws-cli.html"/>
    <id>http://blog.url.com/2016/03/24/to-update-aws-cli.html</id>
    <published>2016-03-24T09:00:00+09:00</published>
    <updated>2016-03-28T13:32:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;気がつくとバージョンが上がっているaws-cliコマンド。&lt;br&gt;
あまりにも頻繁に上がっているので、気が付いたら(向いたら？)バージョンアップを行うようにしています。&lt;br&gt;
今回見たらバージョン1.10.6となっていました。とりあえず気が向いた(付いた？)のでアップグレードを行おうと思います。&lt;br&gt;
ちなみにaws-cliのバージョンについては以下から確認できます。&lt;br&gt;
&lt;a href="https://github.com/aws/aws-cli"&gt;https://github.com/aws/aws-cli&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;また、今回行っている環境はMac OS X El Capitainです。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="①バージョンの確認"&gt;①バージョンの確認&lt;/h1&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ aws --version
aws-cli/1.9.20 Python/2.7.10 Darwin/15.3.0 botocore/1.3.20
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;aws-cli&lt;/em&gt;のところを見ると&lt;em&gt;1.9.20&lt;/em&gt;となっているのがわかります。&lt;br&gt;
現時点(&lt;em&gt;2016-02-19&lt;/em&gt;)での最新バージョンは&lt;em&gt;1.10.6&lt;/em&gt;でした。&lt;br&gt;
&lt;a href="https://github.com/aws/aws-cli"&gt;https://github.com/aws/aws-cli&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="②アップグレード"&gt;②アップグレード&lt;/h1&gt;

&lt;p&gt;それではアップグレードを行いたいと思います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo pip install --upgrade awscli
Password:
〜 省略 〜
Collecting awscli
  Downloading awscli-1.10.6-py2.py3-none-any.whl (887kB)
    100% |████████████████████████████████| 888kB 627kB/s 
Requirement already up-to-date: rsa&amp;lt;=3.3.0,&amp;gt;=3.1.2 in /Library/Python/2.7/site-packages (from awscli)
Collecting s3transfer==0.0.1 (from awscli)
  Downloading s3transfer-0.0.1-py2.py3-none-any.whl
Requirement already up-to-date: colorama&amp;lt;=0.3.3,&amp;gt;=0.2.5 in /Library/Python/2.7/site-packages (from awscli)
Collecting botocore==1.3.28 (from awscli)
  Downloading botocore-1.3.28-py2.py3-none-any.whl (2.2MB)
    100% |████████████████████████████████| 2.2MB 253kB/s 
Requirement already up-to-date: docutils&amp;gt;=0.10 in /Library/Python/2.7/site-packages (from awscli)
Requirement already up-to-date: pyasn1&amp;gt;=0.1.3 in /Library/Python/2.7/site-packages (from rsa&amp;lt;=3.3.0,&amp;gt;=3.1.2-&amp;gt;awscli)
Requirement already up-to-date: futures&amp;lt;4.0.0,&amp;gt;=2.2.0 in /Library/Python/2.7/site-packages (from s3transfer==0.0.1-&amp;gt;awscli)
Requirement already up-to-date: jmespath&amp;lt;1.0.0,&amp;gt;=0.7.1 in /Library/Python/2.7/site-packages (from botocore==1.3.28-&amp;gt;awscli)
Collecting python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1 (from botocore==1.3.28-&amp;gt;awscli)
  Downloading python_dateutil-2.4.2-py2.py3-none-any.whl (188kB)
    100% |████████████████████████████████| 192kB 2.4MB/s 
Collecting six&amp;gt;=1.5 (from python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1-&amp;gt;botocore==1.3.28-&amp;gt;awscli)
  Downloading six-1.10.0-py2.py3-none-any.whl
Installing collected packages: six, python-dateutil, botocore, s3transfer, awscli
  Found existing installation: six 1.4.1
    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.
    Uninstalling six-1.4.1:
Exception:
Traceback (most recent call last):
  File "/Library/Python/2.7/site-packages/pip/basecommand.py", line 209, in main
    status = self.run(options, args)
  File "/Library/Python/2.7/site-packages/pip/commands/install.py", line 317, in run
    prefix=options.prefix_path,
  File "/Library/Python/2.7/site-packages/pip/req/req_set.py", line 725, in install
    requirement.uninstall(auto_confirm=True)
  File "/Library/Python/2.7/site-packages/pip/req/req_install.py", line 752, in uninstall
    paths_to_remove.remove(auto_confirm)
  File "/Library/Python/2.7/site-packages/pip/req/req_uninstall.py", line 115, in remove
    renames(path, new_path)
  File "/Library/Python/2.7/site-packages/pip/utils/__init__.py", line 266, in renames
    shutil.move(old, new)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 302, in move
    copy2(src, real_dst)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 131, in copy2
    copystat(src, dst)
  File "/System/Library/Frameworks/Python.framework/Versions/2.7/lib/python2.7/shutil.py", line 103, in copystat
    os.chflags(dst, st.st_flags)
OSError: [Errno 1] Operation not permitted: '/tmp/pip-l_kdbZ-uninstall/System/Library/Frameworks/Python.framework/Versions/2.7/Extras/lib/python/six-1.4.1-py2.7.egg-info'
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;なにやらエラーが発生。。。どうやらsix 1.4.1があることが原因らしい。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;  Found existing installation: six 1.4.1
    DEPRECATION: Uninstalling a distutils installed project (six) has been deprecated and will be removed in a future version. This is due to the fact that uninstalling a distutils project will only partially uninstall the project.
    Uninstalling six-1.4.1:
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;対応方法はいろいろありますが、今回はsixを無視してアップグレードする対応を行います。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo pip install --upgrade awscli --ignore-installed six
〜 省略 〜
Collecting awscli
  Downloading awscli-1.10.6-py2.py3-none-any.whl (887kB)
    100% |████████████████████████████████| 888kB 657kB/s 
Collecting six
  Downloading six-1.10.0-py2.py3-none-any.whl
Collecting rsa&amp;lt;=3.3.0,&amp;gt;=3.1.2 (from awscli)
  Downloading rsa-3.3-py2.py3-none-any.whl (44kB)
    100% |████████████████████████████████| 45kB 7.0MB/s 
Collecting s3transfer==0.0.1 (from awscli)
  Downloading s3transfer-0.0.1-py2.py3-none-any.whl
Collecting colorama&amp;lt;=0.3.3,&amp;gt;=0.2.5 (from awscli)
  Downloading colorama-0.3.3.tar.gz
Collecting botocore==1.3.28 (from awscli)
  Downloading botocore-1.3.28-py2.py3-none-any.whl (2.2MB)
    100% |████████████████████████████████| 2.2MB 263kB/s 
Collecting docutils&amp;gt;=0.10 (from awscli)
  Downloading docutils-0.12.tar.gz (1.6MB)
    100% |████████████████████████████████| 1.6MB 365kB/s 
Collecting pyasn1&amp;gt;=0.1.3 (from rsa&amp;lt;=3.3.0,&amp;gt;=3.1.2-&amp;gt;awscli)
  Downloading pyasn1-0.1.9-py2.py3-none-any.whl
Collecting futures&amp;lt;4.0.0,&amp;gt;=2.2.0 (from s3transfer==0.0.1-&amp;gt;awscli)
  Downloading futures-3.0.5-py2-none-any.whl
Collecting jmespath&amp;lt;1.0.0,&amp;gt;=0.7.1 (from botocore==1.3.28-&amp;gt;awscli)
  Downloading jmespath-0.9.0-py2.py3-none-any.whl
Collecting python-dateutil&amp;lt;3.0.0,&amp;gt;=2.1 (from botocore==1.3.28-&amp;gt;awscli)
  Downloading python_dateutil-2.4.2-py2.py3-none-any.whl (188kB)
    100% |████████████████████████████████| 192kB 2.7MB/s 
Installing collected packages: pyasn1, rsa, futures, jmespath, six, python-dateutil, docutils, botocore, s3transfer, colorama, awscli
  Running setup.py install for docutils ... done
  Running setup.py install for colorama ... done
Successfully installed awscli-1.10.6 botocore-1.3.20 colorama-0.3.3 docutils-0.12 futures-3.0.5 jmespath-0.9.0 pyasn1-0.1.9 python-dateutil-1.5 rsa-3.3 s3transfer-0.0.1 six-1.4.1
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;無事アップグレードできました。&lt;br&gt;
念のためawsコマンドでバージョンを表示します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ aws --version
aws-cli/1.10.6 Python/2.7.10 Darwin/15.3.0 botocore/1.3.28
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;最新のバージョンになっているのが確認できました。&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>移転祝いを頂きました_(2)</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/15/itenoiwai-next.html"/>
    <id>http://blog.url.com/2016/03/15/itenoiwai-next.html</id>
    <published>2016-03-15T09:00:00+09:00</published>
    <updated>2016-03-28T13:32:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;株式会社ネクスト上田様より移転のお祝いを頂きました！&lt;br&gt;
&lt;br&gt;&lt;br&gt;
・来客用スリッパ&lt;/p&gt;

&lt;p&gt;・靴べら&lt;/p&gt;

&lt;p&gt;・傘立て&lt;br&gt;
&lt;br&gt;&lt;br&gt;
です！&lt;/p&gt;

&lt;p&gt;&lt;img alt="ネクスト社お祝い" src="/images/./2016/0315_oiwai/nextoiwai.JPG" /&gt;&lt;br&gt;
&lt;br&gt;&lt;br&gt;
素敵な贈り物、ありがとうございました。&lt;br&gt;
大切に使わせて頂きます！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>JAWSDAYS2016に参加してきました！</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/14/jawsdays2016.html"/>
    <id>http://blog.url.com/2016/03/14/jawsdays2016.html</id>
    <published>2016-03-14T09:00:00+09:00</published>
    <updated>2016-03-28T13:32:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;div style="text-align:center"&gt;
&lt;img src="../../../images/2016/0314_jawsdays/20160314_jawsdays2016.png"&gt;
&lt;/div&gt;

&lt;p&gt;先日行われた「&lt;a href="http://jawsdays2016.jaws-ug.jp" target="_blank"&gt;JAWSDAYS2016&lt;/a&gt;」で、代表の小熊がスピーカーとして登壇させていただきましたー！&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_01.jpg" /&gt;&lt;br&gt;
会場には顔ハメも用意♪&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;今回担当させていただいたのは「Workshop」ブースの１コマで「静的HTML公開フローをサーバレスでDevOps！」という内容で、簡単に言うと「HTMLやCSSなどで作成された静的サイトをサーバを利用しないで動かしちゃいましょう」という内容です。&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_02.jpg" /&gt;&lt;br&gt;
なんと出番はトップバッター!&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;今まで登壇することがなかったのに、初めての場所が「JAWSDAYS2016」という参加者1,000人越えのビックイベント！！！どきどきですね。。。&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_04.jpg" /&gt;&lt;br&gt;
土曜の朝からこの数。。。しかも9割ほど初参加だそうです。&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;そしていざ、開始ということだったのですが、、、、ネットワークが繋がらない！？&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_03.jpg" /&gt;&lt;br&gt;
さっきまで繋がってたのに。。。トップバッターならではの障害ですね。。。&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;Workshop参加者用に用意していたネットワークがあったのですが、みんなが一斉に繋いだせいか回線がダウン。。。すぐに復旧しそうもないのでハンズオン形式は仕方なく諦めて、小熊さん実演を見てもらう形式に急遽変更。&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_05.jpg" /&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_06.jpg" /&gt;&lt;br&gt;
それでもすぐに気持ちを切り替えて対応！&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;

&lt;p&gt;初っ端のトラブルはありつつも、なんとか時間通り無事終了。参加してくださった方々もみんな真剣に最後まで聴いてくれていました。つくづくハンズオンできなくてすみません。。。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="最後に"&gt;最後に&lt;/h1&gt;

&lt;p&gt;今回イベントに参加してくださった皆様、登壇の機会を与えてくださった西島さん、Workshopを手伝ってくださった神さん、多田さん及び運営スタッフの皆様。&lt;br&gt;
本当にありがとうございました！これからもどんどん参加して行こうと思いますので、これからも宜しくお願い致します!!&lt;br&gt;
&lt;div style="text-align:center"&gt;&lt;br&gt;
&lt;font size="2"&gt;&lt;br&gt;
&lt;img alt="jawsdays" src="/images/./2016/0314_jawsdays/20160314_jawsdays2016_07.jpg" /&gt;&lt;br&gt;
左からサーバーワークス多田さんGENOVA神さん、プラウディット小熊、プラウディット山田&lt;br&gt;
&lt;/font&gt;&lt;br&gt;
&lt;/div&gt;&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>移転しました！</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/11/itenosirase.html"/>
    <id>http://blog.url.com/2016/03/11/itenosirase.html</id>
    <published>2016-03-11T09:00:00+09:00</published>
    <updated>2016-03-28T13:32:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;p&gt;3月よりオフィスを渋谷から新宿へ移転致しました。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;〒160-0022
東京都新宿区新宿6-7-22
エルプリメント新宿158号室
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;a href="https://www.directorz.co.jp/" target="_blank"&gt;ディレクターズ様&lt;/a&gt;から移転のお祝いを頂きました。&lt;br&gt;
執務机です！！&lt;/p&gt;

&lt;p&gt;&lt;img alt="机" src="/images/./2016/0311_iten/shitumudesk.jpg" /&gt;&lt;/p&gt;

&lt;p&gt;素敵な贈り物、ありがとうございました。&lt;br&gt;
大切に使わせて頂きます！&lt;/p&gt;
</content>
  </entry>
  <entry>
    <title>vnstatで手軽にtrafiicをモニタリング</title>
    <link rel="alternate" href="http://blog.url.com/2016/03/08/to-monitor-the-traffic-using-the-vnstat.html"/>
    <id>http://blog.url.com/2016/03/08/to-monitor-the-traffic-using-the-vnstat.html</id>
    <published>2016-03-08T09:00:00+09:00</published>
    <updated>2016-03-28T13:32:01+09:00</updated>
    <author>
      <name>Article Author</name>
    </author>
    <content type="html">&lt;h1 id="はじめに"&gt;はじめに&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;vnstatはコマンドベースのネットワークtrafficモニターです。&lt;br&gt;
trafficというとcactiとかmrtgといったのが最初に思い浮かぶと思いますが、それだとわざわざWebサーバを立てなくてはいけません。&lt;br&gt;
もっと手軽に導入できるのがvnstatです。&lt;br&gt;
また、時間別や日別など、様々なパターンでモニタリングができます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="1.インストール"&gt;1.インストール&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;ということでまず、インストール。&lt;/p&gt;

&lt;p&gt;今回利用するサーバはAmazon Linuxです。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo yum install --enablerepo=epel vnstat
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;redhat系のインストールはepelリポジトリからyumインストールで可能ですが、ubuntu系はaptで以下の方法でインストールできます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo apt-get install vnstat vnstati
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;また、vnstatに関する設定は&lt;em&gt;/etc/vnstat.conf&lt;/em&gt;に記載され、データの保存場所やdata保存間隔などが設定できます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="2.コマンド実行"&gt;2.コマンド実行&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;それではコマンドを実行してみましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat
No database found, nothing to do. Use --help for help.

A new database can be created with the following command:
vnstat -u -i eth0

Replace 'eth0' with the interface that should be monitored.

The following interfaces are currently available:
eth0 lo
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;“No database found …”&lt;/em&gt;と表示されました。&lt;br&gt;
インストールしたてで「まだデータベースが何もないよ！」と言っているみたいです。&lt;br&gt;
続きを読むと&lt;em&gt;”vnstat -u -i eth0”&lt;/em&gt;でデータベースが作成できると書いてあります。&lt;br&gt;
ということで、作成してみます。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="2.1.-db作成"&gt;2.1. DB作成&lt;/h2&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat -u -i eth0
Error: Unable to read database "/var/lib/vnstat/eth0".
Info: -&amp;gt; A new database has been created.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;一行目には”Error”とありますが、二行目には”Info”でデータベースが作成されたと記載があります。&lt;br&gt;
これでデータベースが新規に作成されました。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ ls /var/lib/vnstat/
eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;ということで再度コマンドを実行します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat
eth0: Not enough data available yet.
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;まだ有効なデータがないと言われてしまいました。&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="2.2-データの更新"&gt;2.2 データの更新&lt;/h2&gt;

&lt;p&gt;ということで、データを更新します。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat -u -i eth0
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="2.3-データの確認"&gt;2.3 データの確認&lt;/h2&gt;

&lt;p&gt;では改めて確認してみましょう。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat
Database updated: Tue Jul 7 15:16:40 2015

eth0 since 07/07/15

rx: 25 KiB tx: 13 KiB total: 38 KiB

monthly
rx | tx | total | avg. rate
------------------------+-------------+-------------+---------------
Jul '15 25 KiB | 13 KiB | 38 KiB | 0.00 kbit/s
------------------------+-------------+-------------+---------------
estimated -- | -- | -- |

daily
rx | tx | total | avg. rate
------------------------+-------------+-------------+---------------
today 25 KiB | 13 KiB | 38 KiB | 0.01 kbit/s
------------------------+-------------+-------------+---------------
estimated -- | -- | -- |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;デフォルトだと&lt;em&gt;monthly&lt;/em&gt;と&lt;em&gt;daily&lt;/em&gt;の2種類が表示されますが、オプションによって&lt;em&gt;weekly&lt;/em&gt;表示にすることも可能です。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat -w

eth0 / weekly

rx | tx | total | avg. rate
---------------------------+-------------+-------------+---------------
last 7 days 25 KiB | 13 KiB | 38 KiB | 0.00 kbit/s
current week 25 KiB | 13 KiB | 38 KiB | 0.00 kbit/s
---------------------------+-------------+-------------+---------------
estimated -- | -- | -- |
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="2.4.-オプションの確認"&gt;2.4. オプションの確認&lt;/h2&gt;

&lt;p&gt;どのような出力方法が可能かは、”--help”オプションで確認ができます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstat --help
vnStat 1.11 by Teemu Toivola &amp;lt;tst at iki dot fi&amp;gt;

-q, --query query database
-h, --hours show hours
-d, --days show days
-m, --months show months
-w, --weeks show weeks
-t, --top10 show top10
-s, --short use short output
-u, --update update database
-i, --iface select interface (default: eth0)
-?, --help short help
-v, --version show version
-tr, --traffic calculate traffic
-ru, --rateunit swap configured rate unit
-l, --live show transfer rate in real time

See also "--longhelp" for complete options list and "man vnstat".
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h2 id="2.5.-自動取得設定(daemonの起動)"&gt;2.5. 自動取得設定(daemonの起動)&lt;/h2&gt;

&lt;p&gt;また、この&lt;em&gt;vnstat&lt;/em&gt;は&lt;em&gt;daemon&lt;/em&gt;が用意されているので、起動するだけで自動で情報が取得できます。&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ sudo service vnstat start
vnstatd を起動中: [ OK ]
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h1 id="3.グラフの作成"&gt;3.グラフの作成&lt;/h1&gt;

&lt;hr&gt;

&lt;p&gt;また、&lt;em&gt;vnstati&lt;/em&gt;で取得したデータからpngのグラフも作成できます。&lt;br&gt;
rx：受信&lt;br&gt;
tx：送信&lt;/p&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="[月別(-m)]"&gt;[月別(-m)]&lt;/h3&gt;

&lt;p&gt;&lt;img alt="20160121_monthly.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/d2a7989b-8f62-4b63-8024-2ce3bbb9b7e4.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstati -m -o ./monthly.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="[日別(-d)]"&gt;[日別(-d)]&lt;/h3&gt;

&lt;p&gt;&lt;img alt="20160121_daily.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/877feab1-5f7e-d49f-df81-1c3d5e6d1331.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstati -d -o ./daily.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="[時間別(-h)]"&gt;[時間別(-h)]&lt;/h3&gt;

&lt;p&gt;&lt;img alt="20160121_hourly.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/0ce83c1b-8f71-d524-bf1c-92793bc9de7a.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstati -h -o ./houly.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;br&gt;&lt;/p&gt;

&lt;h3 id="[時間別サマリ(-vs)]"&gt;[時間別サマリ(-vs)]&lt;/h3&gt;

&lt;p&gt;&lt;img alt="20160121_hsum.png" src="https://qiita-image-store.s3.amazonaws.com/0/82090/e361b0b8-e3a9-958b-e086-eb2dd93c94d8.png" /&gt;&lt;/p&gt;
&lt;pre class="highlight plaintext"&gt;&lt;code&gt;$ vnstati -vs -o ./hsum.png
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;以上のように、気軽に導入できグラフ化も可能なのがとても便利です。&lt;/p&gt;
</content>
  </entry>
</feed>
